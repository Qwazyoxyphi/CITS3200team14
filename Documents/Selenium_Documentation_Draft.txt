Selenium – Documentation Draft

Why Use Selenium?
 • Is an automated testing tool; saves on resources typically associated with manual testing.
 • It’s Open Source; free.
     o Also has community support.
 • Works well with any operating system.
     o Windows, Linux, Mac.
 • Performs tests on any web browser.
 • Supports multiple programming languages.
     o Java, C#, Ruby, Python, Perl, PHP.

What is Selenium?
 • An open-source tool that can automate almost any web browser.
 • It can only be used to test applications.
 • Fast and easy to use.
     o Works well with large sets of data.
     o Guaranteed accuracy.
 • Directly runs scripts for any web browser to automate the web application and test it.

Versions and Suite of Tools:
 • The suite is comprised of four components:
     o Selenium IDE
     o Selenium Grid
     o Selenium RC
     o Selenium WebDriver
 • Selenium RC was merged with WebDriver.
     o Selenium WebDriver now has better functionality.

How to Set Up Selenium:
 • There are three software prerequisites to begin using Selenium:
     o In order for optimal compatibility with our Nuxt.js website, we’ll need to have Node.js installed on our computer first.
     o We need a programming environment to compile and run scripts – in our case we’ll be using VSCode.
     o We need the proper web drivers in order for our Selenium scripts to work properly on Chrome, Firefox (etc.).
 • First step is to install Node.js. Go to the Node website, and download the latest Node version, then follow the prompts.
 • Second step is to install VSCode (if you haven’t already). There are plenty of online tutorials to help you set up the environment and install extensions for Java.
     o You don’t have to use VSCode if you prefer using a different environment, such as Eclipse (etc.). However, it is highly recommended that you use VSCode, particularly on Windows.
 • Third step is to install the Selenium Web Drivers.
     o Go to the ‘npm’ website. Find it by searching for ‘selenium-webdrive’.
     o Scroll down until you find the list of web drivers.
     o Download any and all web drivers in the list by following the links to those drivers’ homepages’ and downloading the latest versions.
     o Extract the .exe files for the drivers into a single folder. This will be our web drivers’ path folder.
 • Make sure the file the web drivers are extracted into has its path on the system specified.
     o In Windows, in the search bar type ‘Edit the system environment variables’ and click on it.
     o At the bottom of the new window, click on the button that says ‘Environment Variables’.
     o On the new ‘Environment Variables’ window, click on ‘Path’ which is in the list of ‘User Variables’ and then click on the ‘edit’ button just below the list.
     o Click on the ‘new’ button and input the directory to the web drivers folder you created earlier. 
     o Click ok on all the windows once done to finish.
 • Now we can setup our Selenium scripts via npm.
     o Go to (or create) the folder you intend to store your Selenium scripts in.
     o Using Command Prompt (or other terminal depending on your system), type:
	> npm init
       (Make sure you execute the command while in your script folder directory).
     o Another way to quickly set up the package.json file is to type:
	> npm init -y
	(This will set up the package with all of the default values).
     o You’ll be asked a series of questions to set up you Selenium folder’s package.json file:
	 1) For ‘package name’, just leave it blank and continue.
	 2) For ‘version’, just leave it blank and continue.
	 3) For ‘description’, feel free to give it a description if you so choose.
	 4) For ‘entry point’, just leave it blank and continue.
	 5) Also leave ‘test command’, ‘git repository’ and ‘keywords’ blank.
	 6) For ‘author’, feel free to write your name if you want.
	 7) For ‘license’, we’ll be using MIT.
            (If you used “npm init -y”, these values should be the default)
     o If done without the VSCode terminal, then simply type “code .” to launch VSCode onto the folder as a project.
 • In the Selenium folder, create a file called ‘index.js’. Once created (and while in VSCode), type in “npm install selenium-webdriver”.
     o A new ‘node-modules’ folder should appear in the Selenium folder.
